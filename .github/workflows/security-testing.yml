name: Security Testing

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
  schedule:
    # Run security scans daily
    - cron: '0 3 * * *'

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run npm audit
        run: |
          echo "üîç Running npm audit..."
          npm audit --audit-level=moderate
        continue-on-error: true

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --all-projects
        continue-on-error: true

      - name: Run dependency check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'financbase-admin-dashboard'
          path: '.'
          format: 'ALL'

      - name: Upload security reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-reports
          path: |
            reports/
            dependency-check-report.html
          retention-days: 30

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript
          config-file: ./.github/codeql/codeql-config.yml

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  accessibility-testing:
    name: Accessibility Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build application
        run: pnpm build

      - name: Start application
        run: pnpm start &
        env:
          CI: true

      - name: Wait for application
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:3000 > /dev/null 2>&1; do sleep 1; done'

      - name: Run accessibility tests
        run: npx playwright test --project=accessibility
        env:
          CI: true
          BASE_URL: http://localhost:3000

      - name: Upload accessibility reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: accessibility-reports
          path: test-results/
          retention-days: 30

  security-headers:
    name: Security Headers Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build application
        run: |
          npm install -g @lhci/cli@0.13.x
          # Static analysis of security headers in next.config.mjs

      - name: Check security configuration
        run: |
          echo "üîí Checking security configuration..."

          # Check for security headers in Next.js config
          if grep -q "headers\|security\|helmet" next.config.mjs; then
            echo "‚úÖ Security headers configured"
          else
            echo "‚ö†Ô∏è  Security headers not found in config"
          fi

          # Check for environment variable security
          if grep -q "OTEL_SDK_DISABLED\|NEXT_TELEMETRY_DISABLED" next.config.mjs; then
            echo "‚úÖ Telemetry properly disabled"
          else
            echo "‚ö†Ô∏è  Telemetry not explicitly disabled"
          fi

      - name: Security compliance check
        run: |
          echo "üìã Security Compliance Checklist:"
          echo "- [ ] HTTPS enforced in production"
          echo "- [ ] CSRF protection implemented"
          echo "- [ ] XSS protection active"
          echo "- [ ] Content Security Policy configured"
          echo "- [ ] Security headers set"
          echo "- [ ] Authentication properly implemented"
          echo "- [ ] Authorization checks in place"
